on:
  push:
    branches:
      - main
name: release-please
env:
  ACTION_NAME: conventional-release-labels
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 16
    - name: install
      run: npm ci
    - name: build
      run: npm run build
    - name: commit
      run: |-
        set -e
        # get current commit hash
        CURRENT_HASH=$(git rev-parse HEAD)
        # get last commit hash of last build dist
        LAST_BUILD_HASH=$(git log --author=google-github-actions-bot -1 --pretty=format:"%H")
        DIFF=""
        # build and commit dist if diff
        git config --global user.name "actions-bot"
        git config user.email 'github-actions-bot@google.com'
        git add dist/
        git diff-index --quiet HEAD || git commit -m "chore: build dist ${ACTION_NAME}"
        # if last commit hash of last build dist was found, get logs of commits in btw for PR body
        if [ -z "$LAST_BUILD_HASH" ]
        then
              echo "Unable to find last commit by bot, skipping diff gen"
        else
              DIFF=$(git log ${LAST_BUILD_HASH}...${CURRENT_HASH} --oneline)
              echo $DIFF
        fi
        # set env vars
        echo "CURRENT_HASH=${CURRENT_HASH}" >> $GITHUB_ENV
        echo "LAST_BUILD_HASH=${LAST_BUILD_HASH}" >> $GITHUB_ENV
        echo 'DIFF<<EOF' >> $GITHUB_ENV
        echo "${DIFF}" >> $GITHUB_ENV
        echo 'EOF' >> $GITHUB_ENV
    - name: Create PR with dist
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: Build dist
        author: "actions-bot <github-actions-bot@google.com>"
        title: "chore: build dist"
        body: |
          Build dist PR
          ${{env.DIFF}}
        labels: automated pr
        branch: create-pull-request/build-dist
        delete-branch: true
  release-please-pr:
    runs-on: ubuntu-latest
    needs: [build]
    permissions:
      pull-requests: write
      contents: write
    steps:
      - id: release-pr
        uses: google-github-actions/release-please-action@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: node
          package-name: ${{env.ACTION_NAME}}
          command: release-pr
  release-please-release:
    runs-on: ubuntu-latest
    needs: [build]
    permissions:
      pull-requests: write
      contents: write
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: node
          package-name: ${{env.ACTION_NAME}}
          command: github-release
      - uses: actions/checkout@v3
      - name: tag major and patch versions
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          git tag -d v${{ steps.release.outputs.major }} || true
          git tag -d v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} || true
          git push origin :v${{ steps.release.outputs.major }} || true
          git push origin :v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} || true
          git tag -a v${{ steps.release.outputs.major }} -m "Release v${{ steps.release.outputs.major }}"
          git tag -a v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} -m "Release v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}"
          git push origin v${{ steps.release.outputs.major }}
          git push origin v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}
        if: ${{ steps.release.outputs.release_created }}
